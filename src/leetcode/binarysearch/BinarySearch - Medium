https://leetcode.com/problems/binary-search/
704. Binary Search

// Iterative Solution
class Solution {
    public int search(int[] nums, int target) {

        int right = nums.length-1;
        int left = 0;
        int mid = -1;

        while(left <= right){
            mid = left+((right - left)/2);

            if (nums[mid]== target){
                return mid;
            }else if(nums[mid] < target){
                left = mid+1;
                continue;
            }else if(nums[mid] > target){
                right = mid-1;
                continue;
            }
        }
        return -1;
    }
}

// Recursive Solution

class Solution {
    public int search(int[] nums, int target) {

        int right = nums.length-1;
        int left = 0;

        return binarySearch(nums,target,left,right);
    }

    int binarySearch(int[] nums, int target, int left, int right){
        if ( left > right ) return -1;

        int mid = left+((right-left)/2);

        if (nums[mid] == target) return mid;

        if (target > nums[mid]) return binarySearch(nums, target, mid+1, right);

        if (target < nums[mid]) return binarySearch(nums, target, left, mid-1);

        return -1;
    }
}