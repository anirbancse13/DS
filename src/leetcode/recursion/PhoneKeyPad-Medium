https://leetcode.com/problems/letter-combinations-of-a-phone-number/
17. Letter Combinations of a Phone Number

class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> ans = new ArrayList<>();
        if(digits.length()==0)
            return ans;
        StringBuilder output = new StringBuilder();
        int index = 0;
        String[] mapping = {"","","abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        solve(digits, ans, output, index, mapping);
        return ans;
    }

    private void solve(String digits, List<String> ans, StringBuilder output, int index, String[] mapping  ){
        //base condition
        if(index>=digits.length()){
            ans.add(output.toString());
            return;
        }

        int digit = digits.charAt(index)-'0';
        String value = mapping[digit];

        for(int i=0; i<value.length();i++){
            output.append(value.charAt(i));
            solve(digits, ans, output, index+1, mapping);
            output.deleteCharAt(output.length()-1);
        }

    }
}