https://leetcode.com/problems/unique-number-of-occurrences/
1207. Unique Number of Occurrences

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        Map<Integer,Integer> map = new HashMap<>();
        for(int n:arr){
            if(map.containsKey(n)){
                map.put(n, map.get(n)+1);
            }else{
                map.put(n, 1);
            }
        }


        Set<Integer> set = new HashSet<>();
        for(Map.Entry<Integer,Integer> e: map.entrySet()){
            set.add(e.getValue());
        }

        if(set.size()==map.size()){
            return true;
        }
        return false;
    }
}

//Optimized Solution

    public boolean uniqueOccurrences(int[] arr) {
        //array to store number of occurances
        int[] c = new int[2001];
        //count occurance of each value
        for (int n : arr) {
            c[n+1000]++;
        }
        //check unique occurances (except for 0)
        Set<Integer> set = new HashSet();
        for (int count : c) {
            if (count == 0)
                continue;
            if (!set.add(count))
                return false;
        }
        return true;
    }