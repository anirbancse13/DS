//https://leetcode.com/problems/product-of-array-except-self/
238. Product of Array Except Self

// T - O(n)
// S - O(n)

Optimal solution would be S - O(1)

class Solution {
    public int[] productExceptSelf(int[] nums) {

        int[] left = new int[nums.length];
        int[] right = new int[nums.length];
        int[] result = new int[nums.length];

        int prod = 1;
        for(int i=0;i< nums.length; i++){
            prod = prod*nums[i];
            left[i] = prod;
        }

        prod = 1;
        for(int i =nums.length-1; i>=0;i--){
            prod = prod*nums[i];
            right[i] = prod;
        }


        for(int i=0;i< nums.length; i++){
            int leftProd = 1;
            int rightProd = 1;

            if(i-1 >= 0)
                leftProd = left[i-1];
            if (i+1 < nums.length)
                rightProd = right[i+1];

            result[i] = leftProd * rightProd;

        }
        return result;
    }
}