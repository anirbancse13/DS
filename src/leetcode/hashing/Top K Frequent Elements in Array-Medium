https://practice.geeksforgeeks.org/problems/top-k-frequent-elements-in-array/1

class Solution {
    public int[] topK(int[] nums, int k) {
        int[] result = new int[k];

        Map<Integer,Integer> map = new HashMap<>();
        for (int num : nums){
            if(map.containsKey(num)){
                int value = map.get(num);
                value = value+1;
                map.put(num,value);
            }else{
                map.put(num,1);
            }
        }

        List<Map.Entry<Integer, Integer>> list = new LinkedList<>(map.entrySet());


        Collections.sort(list, (e1, e2) -> {
            if (e1.getValue() < e2.getValue()) {
              return 1;
            } else if (e1.getValue() > e2.getValue()) {
                return -1;
            } else {
                if (e1.getKey() > e2.getKey()) {
                    return -1;
                } else {
                    return 1;
                }
            }
        });

        Map<Integer, Integer> temp = new LinkedHashMap<>();
        list.forEach(aa ->temp.put(aa.getKey(), aa.getValue()));

        int count =0;
        for (Map.Entry<Integer, Integer> en : temp.entrySet()) {
            if(k!= count){
                result[count] = en.getKey();
                count++;
            }
        }

        return result;
    }
}