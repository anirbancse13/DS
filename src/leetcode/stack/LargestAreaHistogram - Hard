https://leetcode.com/problems/largest-rectangle-in-histogram/
84. Largest Rectangle in Histogram

class Solution {
    public int largestRectangleArea(int[] heights) {

        int n = heights.length;

        int[] prev = new int[n];
        prev = prevSmallElements(heights, n);

        int[] next = new int[n];
        next = nextSmallElements(heights, n);

        int area = Integer.MIN_VALUE;

        for(int i=0;i<n;i++){
            int l = heights[i];

            if(next[i] == -1){
                next[i]=n;
            }
            int b=next[i]-prev[i]-1;

            int newArea = l*b;
            area=Math.max(area,newArea);
        }

        return area;
    }

    private int[] nextSmallElements(int[] heights, int n){
        int[] arr = new int[n];
        Stack<Integer> s = new Stack<>();
        s.push(-1);

        for(int i=n-1;i>=0;i--){
            int curr = heights[i];
            while(s.peek() != -1 && heights[s.peek()]>=curr){
                s.pop();
            }
            arr[i]=s.peek();
            s.push(i);
        }
        return arr;
    }

    private int[] prevSmallElements(int[] heights, int n){
        int[] arr = new int[n];
        Stack<Integer> s = new Stack<>();
        s.push(-1);

        for(int i=0;i<n;i++){
            int curr = heights[i];
            while(s.peek() != -1 && heights[s.peek()]>=curr){
                s.pop();
            }
            arr[i]=s.peek();
            s.push(i);
        }
        return arr;
    }
}